{"version":3,"sources":["helper/Web3Config.js","pages/app/function.js","component/NavBar/function.js","component/NavBar/NavBar.js","pages/app/app.js","pages/about/function.js","pages/about/about.js","router/router.js","redux/reducers/general.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.js"],"names":["contract","_","isUndefined","window","web3","eth","abi","at","app_function","componentDidMount","_this","this","isString","Contract","totalEthInWei","err","data","setState","totalRaised","toString","mapStateToProps","state","mapDispatchToProps","dispatch","NavBar_function","NavBar","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","target","href","Component","connect","f","bind","undefined","App","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","assertThisInitialized","component_NavBar_NavBar","about_function","About","class","Routes","BrowserRouter","Switch","Route","exact","path","component","generalVarables","combineReducers","general","arguments","length","objectSpread","middleware","applyMiddleware","thunk","createStore","reducers","Boolean","location","hostname","match","router","ReactDOM","render","es","store","appStore","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b59751f3.chunk.js","sourcesContent":["import abi from './master-coin-abi.json';\nimport _ from 'lodash';\n\nlet contract;\nif (_.isUndefined(window.web3)) {\n  contract = \"Seems like you are missing the Metamask in your Browser\"\n} else {\n  let { web3 } = window;\n  let MyContract = web3.eth.contract(abi);\n  contract = MyContract.at('0x29f5e78329B71978bcbB8fBDd7249D81eD1f799D')\n}\n\nexport default contract;","import _ from 'lodash'\nimport Contract from '../../helper/Web3Config.js';\n\nexport default {\n\n  /**********************LifeCycle Components in Order **********************************/\n  componentDidMount : function () {\n    if (!_.isString(Contract)) {\n      \n      Contract.totalEthInWei((err, data) => {\n        this.setState({\n          totalRaised : data.toString(10)/1000000000000000000\n        })\n      });\n    \n    }\n  },\n  /***********************Additonal Functions to be used within component ***************/\n\n\n  /**********************Connecting and defining the Redux ******************************/\n  mapStateToProps: function (state) {\n    return {\n\n    }\n  },\n\n  mapDispatchToProps: function (dispatch) {\n    return {\n\n    }\n  },\n}\n\n// Local functions limitng to only this component","export default {\n\n  /**********************LifeCycle Components in Order **********************************/\n  \n  /***********************Additonal Functions to be used within component ***************/\n\n\n  /**********************Connecting and defining the Redux ******************************/\n  mapStateToProps: function (state) {\n    return {\n\n    }\n  },\n\n  mapDispatchToProps: function (dispatch) {\n    return {\n\n    }\n  },\n}\n\n// Local functions limitng to only this component","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport f from './function.js';\nimport { Link } from 'react-router-dom'\nimport './style.css'\n\nclass NavBar extends Component {\n  // constructor(props){\n  //   super(props);\n  // }\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <Link className=\"navbar-brand\" to=\"/\">MasterCoin</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/about\">About</Link>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" target=\"_blank\" href=\"https://github.com/Ahsan-J/MasterCoin\">Git</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}\n\n\nexport default connect(f.mapStateToProps.bind(this), f.mapDispatchToProps.bind(this))(NavBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport './style.css';\nimport f from './function.js'\nimport NavBar from '../../component/NavBar/NavBar.js'\nimport Contract from '../../helper/Web3Config.js';\nimport _ from 'lodash';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalRaised: null\n    }\n    this.componentDidMount = f.componentDidMount.bind(this);\n  }\n\n  render() {\n    if (_.isString(Contract)) {\n      return (\n        <div className=\"container\">\n          <NavBar />\n          <h1>\n            {Contract}\n          </h1>\n        </div>)\n    }\n    return (\n      <div className=\"container\">\n        <NavBar />\n        <div className=\"titleContainer mt-4 p-2\">\n          <div className=\"offset-md-1\">\n            <div className=\"p-3\">\n              <h2 className=\"\">Master Coin ICO</h2>\n              <h4 className=\"\">0x29f5e78329B71978bcbB8fBDd7249D81eD1f799D</h4>\n            </div>\n            <div className=\"p-3\">\n              <h2 className=\"\">Total Raised</h2>\n              <h4 className=\"\">{this.state.totalRaised} ETH</h4>\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-4 row\">\n          <div className=\"offset-lg-1 col-lg-5 offset-md-1 col-md-11 \">\n            <div className=\"mt-3\">\n              <h4>Price</h4>\n              <span>1 ETH = 10 UBIT-003</span>\n            </div>\n            <div className=\"mt-3\">\n              <h4>Total Supply</h4>\n              <span>1000</span>\n            </div>\n            <div className=\"mt-3\">\n              <h4>First week bonus</h4>\n              <span>25%</span>\n            </div>\n          </div>\n          <div className=\"offset-lg-1 col-lg-5 offset-md-1 col-md-11\">\n            <div className=\"mt-3\">\n              <h4>Start Date</h4>\n              <span>29th Dec 2018</span>\n            </div>\n            <div className=\"mt-3\">\n              <h4>End Date</h4>\n              <span>29th Dec 2019</span>\n            </div>\n            <div className=\"mt-3\">\n              <h4>Max Cap</h4>\n              <span>5 ETH</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(f.mapStateToProps.bind(this), f.mapDispatchToProps.bind(this))(App);","export default {\n\n  /**********************LifeCycle Components in Order **********************************/\n  \n  /***********************Additonal Functions to be used within component ***************/\n\n\n  /**********************Connecting and defining the Redux ******************************/\n  mapStateToProps: function (state) {\n    return {\n\n    }\n  },\n\n  mapDispatchToProps: function (dispatch) {\n    return {\n\n    }\n  },\n}\n\n// Local functions limitng to only this component","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport './style.css';\nimport f from './function.js'\nimport NavBar from '../../component/NavBar/NavBar.js'\n\nclass About extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <NavBar />\n        <div className=\"mt-5\">\n          <h2>About the App</h2>\n            <p class=\"lead\">\n              MasterCoin is the token based coin deployed on the Test network of \n              &nbsp;<a href=\"https://ropsten.etherscan.io/\">Ropston</a> Network as a part of University Assignment.\n              The Initial Coin Offering is made by Following the steps mentioned in \n              &nbsp;<a href=\"https://hashnode.com/post/how-to-build-your-own-ethereum-based-erc20-token-and-launch-an-ico-in-next-20-minutes-cjbcpwzec01c93awtbij90uzn\">\n              How to build your own Ethereum based ERC20 Token</a> The steps follows the creation of ICO and Integrating it in HTML file. The ICO I personally integrated with is <a href=\"https://reactjs.org/\">ReactJS</a> \n              &nbsp;which uses the npm based web3 instance, which can be ignored to use the Metamask stored web3 object in the global window object of the browser it runs. So if you are having an issue in loading \n              the main page of this site is probably because the Metamask might not have been configured properly to interact with the browsers global variables.\n              The source code of this project is available on the Git repository. Hope the reader enjoyed my experince as much as I did im making this test project to Interact with my Contact on a Blockchain network\n              Working on the Project started on 29th of December and wll hopefully be submitted the same day.\n            </p>\n        </div>\n        <div>\n          <h2>About me</h2>\n          <p className=\"lead\">Name: <a href=\"https://github.com/Ahsan-J\">Ahsan Jawed</a></p>\n          <p className=\"lead\">Seat No: B14158003</p>\n          <p className=\"lead\">Section: BSSE (A)</p>\n          <p className=\"lead\">Shift: Morning</p>\n          <p className=\"lead\">Submitted to: <a href=\"mailto:fafsoft@gmail.com?Subject=Assignment%20TOCI-III%20UBIT-003%20Morning\">Sir Faisal Ahmed Farooqui</a></p>\n          <p className=\"lead\">Submission Date : 29th December 2018</p>\n          <p className=\"lead\">Course Title: Topic of Current Interest- III</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(f.mapStateToProps.bind(this), f.mapDispatchToProps.bind(this))(About);\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport App from '../pages/app/app.js';\nimport About from '../pages/about/about.js';\n\nclass Routes extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={App} />\n          <Route path=\"/about\" component={About} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default Routes;\n","var generalVarables = {\r\n\r\n};\r\nexport default function (state = generalVarables, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'Something':\r\n\t\t\treturn state = {\r\n\t\t\t\t...state\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import {combineReducers} from 'redux';\r\nimport general from './general.js'\r\n\r\nexport default combineReducers({\r\n    general\r\n});","import {createStore,applyMiddleware} from 'redux';\r\nimport reducers from './reducers/index.js';\r\nimport thunk from 'redux-thunk'\r\n\r\nconst middleware = applyMiddleware(thunk)\r\n\r\nexport default  createStore(reducers,middleware);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './router/router.js';\nimport appStore from './redux/store.js'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nclass App extends Component {\n  render() {\n    return (\n      <Routes />\n    )\n  }\n}\n\nReactDOM.render(\n  <Provider store={appStore}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}